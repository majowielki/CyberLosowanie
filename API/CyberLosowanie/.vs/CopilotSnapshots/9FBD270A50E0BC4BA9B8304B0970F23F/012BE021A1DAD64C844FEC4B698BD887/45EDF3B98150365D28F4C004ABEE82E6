using CyberLosowanie.Models;
using CyberLosowanie.Models.Dto;
using CyberLosowanie.Services;
using Microsoft.AspNetCore.Mvc;
using System.Net;

namespace CyberLosowanie.Controllers
{
    [Route("api/auth")]
    [ApiController]
    public class AuthController : ControllerBase
    {
        private readonly IAuthService _authService;

        public AuthController(IAuthService authService)
        {
            _authService = authService ?? throw new ArgumentNullException(nameof(authService));
        }

        [HttpPost("login")]
        public async Task<IActionResult> Login([FromBody] LoginRequestDTO model)
        {
            if (!ModelState.IsValid)
            {
                var errors = ModelState.Values.SelectMany(v => v.Errors).Select(e => e.ErrorMessage).ToList();
                return BadRequest(ApiResponse<object>.ValidationError(errors));
            }
            var loginResponse = await _authService.LoginAsync(model);
            var apiResponse = new ApiResponse { StatusCode = HttpStatusCode.OK, IsSuccess = true, Result = loginResponse };
            return Ok(apiResponse);
        }

        [HttpPost("register")]
        public async Task<IActionResult> Register([FromBody] RegisterRequestDTO model)
        {
            if (!ModelState.IsValid)
            {
                var errors = ModelState.Values.SelectMany(v => v.Errors).Select(e => e.ErrorMessage).ToList();
                return BadRequest(ApiResponse<object>.ValidationError(errors));
            }
            await _authService.RegisterAsync(model);
            var apiResponse = new ApiResponse { StatusCode = HttpStatusCode.OK, IsSuccess = true };
            return Ok(apiResponse);
        }
    }
}
